[{"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/index.js":"1","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/App.js":"2","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/views/login/index.js":"3","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/views/login/login.view.js":"4","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/assets/theme/index.js":"5","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/views/signup/index.js":"6","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/views/signup/signup.view.js":"7","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/assets/theme/input.js":"8","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/views/chatter/chatter.view.js":"9","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/privateRoute/index.js":"10","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/api/auth/index.js":"11","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/api/storage/index.js":"12","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/api/index.js":"13","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatList/index.js":"14","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatList/chatList.view.js":"15","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatList/chat/index.js":"16","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatList/chat/chat.view.js":"17","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatWindow/index.js":"18","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatWindow/chatWindow.view.js":"19","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatWindow/AutoTextArea/index.js":"20","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatWindow/AutoTextArea/autoTextArea.view.js":"21","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatWindow/chatMessage/index.js":"22","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatWindow/chatMessage/chatMessage.view.js":"23","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/assets/theme/button.js":"24","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatList/UsersDrawer/index.js":"25","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatList/UsersDrawer/usersDrawer.view.js":"26","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/context/index.js":"27","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/api/socket/index.js":"28","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/messageToast/index.js":"29","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/messageToast/messageToast.view.js":"30","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/views/chatter/index.js":"31"},{"size":219,"mtime":1609633108801,"results":"32","hashOfConfig":"33"},{"size":798,"mtime":1617989636378,"results":"34","hashOfConfig":"33"},{"size":57,"mtime":1609633914032,"results":"35","hashOfConfig":"33"},{"size":4069,"mtime":1617994403503,"results":"36","hashOfConfig":"33"},{"size":294,"mtime":1610064465333,"results":"37","hashOfConfig":"33"},{"size":60,"mtime":1609697138221,"results":"38","hashOfConfig":"33"},{"size":5079,"mtime":1617984852357,"results":"39","hashOfConfig":"33"},{"size":275,"mtime":1609705336345,"results":"40","hashOfConfig":"33"},{"size":1087,"mtime":1617993062850,"results":"41","hashOfConfig":"33"},{"size":327,"mtime":1609724052169,"results":"42","hashOfConfig":"33"},{"size":597,"mtime":1610284525618,"results":"43","hashOfConfig":"33"},{"size":349,"mtime":1610152266312,"results":"44","hashOfConfig":"33"},{"size":2620,"mtime":1617987556114,"results":"45","hashOfConfig":"33"},{"size":66,"mtime":1609722317375,"results":"46","hashOfConfig":"33"},{"size":2338,"mtime":1617992238902,"results":"47","hashOfConfig":"33"},{"size":54,"mtime":1609873527161,"results":"48","hashOfConfig":"33"},{"size":850,"mtime":1617995205783,"results":"49","hashOfConfig":"33"},{"size":72,"mtime":1610040352950,"results":"50","hashOfConfig":"33"},{"size":2729,"mtime":1617995321188,"results":"51","hashOfConfig":"33"},{"size":78,"mtime":1610044078770,"results":"52","hashOfConfig":"33"},{"size":288,"mtime":1610223252982,"results":"53","hashOfConfig":"33"},{"size":75,"mtime":1610048884322,"results":"54","hashOfConfig":"33"},{"size":940,"mtime":1610219083536,"results":"55","hashOfConfig":"33"},{"size":273,"mtime":1610064715807,"results":"56","hashOfConfig":"33"},{"size":75,"mtime":1610135074152,"results":"57","hashOfConfig":"33"},{"size":1369,"mtime":1610154163225,"results":"58","hashOfConfig":"33"},{"size":855,"mtime":1617995160407,"results":"59","hashOfConfig":"33"},{"size":1530,"mtime":1617992835897,"results":"60","hashOfConfig":"33"},{"size":78,"mtime":1610285649500,"results":"61","hashOfConfig":"33"},{"size":489,"mtime":1611174183939,"results":"62","hashOfConfig":"33"},{"size":63,"mtime":1617989607598,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"rc4fuc",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/index.js",[],["132","133"],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/App.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/views/login/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/views/login/login.view.js",["134"],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/assets/theme/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/views/signup/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/views/signup/signup.view.js",["135"],"import {\n\tHeading,\n\tInput,\n\tFormControl,\n\tFormLabel,\n\tLink,\n\tText,\n\tSlideFade,\n\tuseDisclosure,\n\tFormErrorMessage, InputGroup, InputRightElement, IconButton, Button\n} from \"@chakra-ui/react\";\nimport {useEffect, useState} from 'react';\nimport {Link as ReactLink, useHistory} from 'react-router-dom';\nimport styles from './signup.module.css';\nimport {ViewIcon, ViewOffIcon} from \"@chakra-ui/icons\";\nimport {useForm} from \"react-hook-form\";\nimport fetchResource from \"../../api\";\nimport {setUserSession} from \"../../api/auth\";\n\nconst Signup = (props) => {\n\tconst {isOpen, onToggle} = useDisclosure();\n\tconst [viewPassword, setViewPassword] = useState(false);\n\tconst [isSubmitting, setIsSubmitting] = useState(false);\n\n\tconst history = useHistory();\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tonToggle();\n\t\t}, 500);\n\t}, []);\n\n\tconst { register, handleSubmit, errors, watch, setError, clearErrors } = useForm();\n\tconst onSubmit = data => {\n\t\tclearErrors();\n\t\tsetIsSubmitting(true);\n\t\tfetchResource(\"POST\", \"register\", {body: {email: data.email, name: data.name, password: data.password}}).then((res) => {\n\t\t\tsetUserSession(res);\n\t\t\tsetIsSubmitting(false);\n\t\t\thistory.push(\"/\");\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t\tObject.keys(error.response.error).forEach(key => {\n\t\t\t\tsetError(key, {\n\t\t\t\t\ttype: \"manual\",\n\t\t\t\t\tmessage: error.response.error[key]\n\t\t\t\t});\n\t\t\t})\n\t\t\tsetIsSubmitting(false);\n\t\t})\n\t}\n\treturn (\n\t\t<div className={styles.image}>\n\t\t\t\t<div className={styles.glass}>\n\t\t\t\t\t<SlideFade in={isOpen} offsetY=\"30px\">\n\t\t\t\t\t\t<div className={styles.form}>\n\t\t\t\t\t\t\t<div className={styles.header}>\n\t\t\t\t\t\t\t\t<Heading as=\"h1\">\n\t\t\t\t\t\t\t\t\tSign up to\n\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t\t<Heading as=\"h1\" size=\"3xl\" color=\"blue.700\">\n\t\t\t\t\t\t\t\t\tNuclio Chatter\n\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t\t\t\t<div className={styles.input}>\n\t\t\t\t\t\t\t\t\t<FormControl id=\"name\" isInvalid={errors.email}>\n\t\t\t\t\t\t\t\t\t\t<FormLabel>Name</FormLabel>\n\t\t\t\t\t\t\t\t\t\t<Input name=\"name\" type=\"text\" ref={register({\n\t\t\t\t\t\t\t\t\t\t\trequired: 'Enter your name',\n\t\t\t\t\t\t\t\t\t\t})}  placeholder=\"John Doe\"/>\n\t\t\t\t\t\t\t\t\t\t<FormErrorMessage>{errors.name ? errors.name.message: ''}</FormErrorMessage>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={styles.input}>\n\t\t\t\t\t\t\t\t\t<FormControl id=\"email\" isInvalid={errors.email}>\n\t\t\t\t\t\t\t\t\t\t<FormLabel>Email</FormLabel>\n\t\t\t\t\t\t\t\t\t\t<Input name=\"email\" type=\"email\" ref={register({\n\t\t\t\t\t\t\t\t\t\t\trequired: 'Enter a valid email',\n\t\t\t\t\t\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: \"invalid email address\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})} autoComplete=\"off\" placeholder=\"yourawesome@email.com\"/>\n\t\t\t\t\t\t\t\t\t\t<FormErrorMessage>{errors.email ? errors.email.message: ''}</FormErrorMessage>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={styles.input}>\n\t\t\t\t\t\t\t\t\t<FormControl id=\"password\" isInvalid={errors.password}>\n\t\t\t\t\t\t\t\t\t\t<FormLabel>Password</FormLabel>\n\t\t\t\t\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t\t\t\t\t<Input name=\"password\" type={viewPassword ? \"text\": \"password\"} ref={register({\n\t\t\t\t\t\t\t\t\t\t\t\trequired: 'You must enter a password ',\n\t\t\t\t\t\t\t\t\t\t\t\tminLength : {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 6,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Password must be at least 6 characters long'\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength : {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 12,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Password can not exceed 12 characters'\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t})} autoComplete=\"off\" placeholder=\"*********\"/>\n\t\t\t\t\t\t\t\t\t\t\t<InputRightElement width=\"4.5rem\">\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton size={\"sm\"} onClick={() => setViewPassword(!viewPassword)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{viewPassword ? <ViewOffIcon/> : <ViewIcon/>}\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t</InputRightElement>\n\t\t\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t\t\t\t<FormErrorMessage>{errors.password ?errors.password.message: ''}</FormErrorMessage>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={styles.input}>\n\t\t\t\t\t\t\t\t\t<FormControl id=\"confirmPassword\" isInvalid={errors.confirmPassword}>\n\t\t\t\t\t\t\t\t\t\t<FormLabel>Confirm Password</FormLabel>\n\t\t\t\t\t\t\t\t\t\t<Input name=\"confirmPassword\" type={viewPassword ? \"text\": \"password\"} ref={register({\n\t\t\t\t\t\t\t\t\t\t\trequired: 'Passwords do not match',\n\t\t\t\t\t\t\t\t\t\t\tvalidate: (value) => value === watch('password') || \"Passwords don't match.\"\n\n\t\t\t\t\t\t\t\t\t\t})} autoComplete=\"off\" placeholder=\"*********\"/>\n\t\t\t\t\t\t\t\t\t\t<FormErrorMessage>{errors.confirmPassword ?errors.confirmPassword.message: ''}</FormErrorMessage>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={styles.button}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\t\t\theight=\"48px\"\n\t\t\t\t\t\t\t\t\t\twidth=\"200px\"\n\t\t\t\t\t\t\t\t\t\tcolorScheme=\"blue\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}\n\t\t\t\t\t\t\t\t\t\tloadingText=\"Submitting\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t<Text align=\"center\" p={4}>\n\t\t\t\t\t\t\t\tAlready a user? Click{' '}\n\t\t\t\t\t\t\t\t<Link as={ReactLink} to=\"/login\" color=\"blue.800\">\n\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\there\n\t\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t{' '}to Log In.\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</SlideFade>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default Signup;\n","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/assets/theme/input.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/views/chatter/chatter.view.js",["136"],"import styles from './chatter.module.css';\nimport ChatList from \"../../components/chatList\";\nimport ChatWindow from \"../../components/chatWindow\";\nimport {useSocket, withSocket} from \"../../api/socket\";\nimport MessageToast from \"../../components/messageToast\";\nimport {useToast} from \"@chakra-ui/react\";\nimport {useChatContext} from \"../../context\";\nimport {useEffect} from \"react\";\n\nconst Chatter = () => {\n\n\tconst toast = useToast();\n\tconst {subscribeNewChatMessage} = useSocket();\n\tconst {activeChat} = useChatContext();\n\tuseEffect(() => {\n\t\tif(activeChat) {\n\t\t\tsubscribeNewChatMessage((message) => {\n\t\t\t\tif(message.chat !== activeChat._id){\n\t\t\t\t\ttoast({\n\t\t\t\t\t\tposition: \"top-right\",\n\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t<MessageToast message={message} />\n\t\t\t\t\t\t),\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t}, [activeChat, toast]);\n\n\n\treturn (\n\t\t<div className={styles.root}>\n\t\t\t\t<div className={styles.grid}>\n\t\t\t\t\t<div className={styles.sideNav}>\n\t\t\t\t\t\t<ChatList/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.chat}>\n\t\t\t\t\t\t<ChatWindow/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n};\nexport default withSocket(Chatter);\n","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/privateRoute/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/api/auth/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/api/storage/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/api/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatList/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatList/chatList.view.js",["137"],"import styles from './chatList.module.css'\nimport {AddIcon} from \"@chakra-ui/icons\";\nimport Chat from \"./chat\";\nimport {Button, useDisclosure} from '@chakra-ui/react';\nimport {useEffect, useRef, useState} from \"react\";\nimport UsersDrawer from \"./UsersDrawer\";\nimport {getSessionUser} from \"../../api/auth\";\nimport fetchResource from \"../../api\";\nimport {useSocket} from \"../../api/socket\";\n\nconst ChatList = () => {\n\tconst [users, setUsers] = useState([]);\n\tconst [chats, setChats] = useState([]);\n\tconst [availableUsers, setAvailableUsers] = useState([]);\n\tconst sessionUser = getSessionUser();\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\n\tconst {subscribeNewChat, subscribeNewUser} = useSocket();\n\tconst btnRef = useRef();\n\tconst [refreshUsers, setRefreshUsers] = useState(true);\n\tconst [refreshChats, setRefreshChats] = useState(true);\n\n\tuseEffect(() => {\n\t\tsubscribeNewChat((newChat) => {\n\t\t\tsetRefreshChats(true);\n\t\t});\n\t\n\t\tsubscribeNewUser((newUser) => {\n\t\t\tsetRefreshUsers(true);\n\t\t})\n\t})\n\n\tuseEffect(() => {\n\t\tfetchResource(\"GET\", \"user\").then(res => {\n\t\t\tsetUsers(res);\n\t\t\tsetRefreshUsers(false);\n\t\t});\n\t},[refreshUsers]);\n\n\tuseEffect(() => {\n\t\tfetchResource(\"GET\", \"chat\").then(res =>{\n\t\t\tsetChats(res);\n\t\t\tsetRefreshChats(false);\n\t\t});\n\t}, [refreshChats]);\n\n\tuseEffect(() => {\n\t\tconst userExistsInChats = (user,chatsArray) => {\n\t\t\tlet exists = false;\n\t\t\tchatsArray.forEach(c => c.users.map(u => u._id).forEach(u => {\n\t\t\t\tif(u === user.id || u === user._id){\n\t\t\t\t\texists = true;\n\t\t\t\t}\n\t\t\t}));\n\t\t\treturn exists;\n\t\t}\n\n\t\tif(users && chats){\n\t\t\tconst usersNotInChat = users.filter(user => user._id !== sessionUser.id && !userExistsInChats(user, chats));\n\t\t\tsetAvailableUsers(usersNotInChat);\n\t\t}else if(!chats && users){\n\t\t\tsetAvailableUsers(users.filter(u => u._id !== sessionUser.id));\n\t\t}\n\t},[users, chats])\n\n\t\n\n\tconst onCloseDrawer = () => {\n\t\tonClose();\n\t}\n\treturn (\n\t\t<div className={styles.root}>\n\t\t\t<div className={styles.newChat}>\n\t\t\t\t<Button variant=\"custom\" size=\"lg\" ref={btnRef} onClick={onOpen} width=\"100%\" leftIcon={<AddIcon/>}>New Chat</Button>\n\t\t\t</div>\n\t\t\t<div className={styles.chatList}>\n\t\t\t{chats.map(chat => (\n\t\t\t\t\t<Chat chat={chat}/>\n\t\t\t))}\n\t\t\t</div>\n\t\t\t<UsersDrawer isOpen={isOpen} onClose={onCloseDrawer} btnRef={btnRef} availableUsers={availableUsers}/>\n\n\t\t</div>\n\t)\n};\n\nexport default ChatList;\n","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatList/chat/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatList/chat/chat.view.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatWindow/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatWindow/chatWindow.view.js",["138","139"],"import styles from './chatWindow.module.css';\nimport AutoTextArea from \"./AutoTextArea\";\nimport {Avatar, Button} from \"@chakra-ui/react\";\nimport ChatMessage from \"./chatMessage\";\nimport {getSessionUser, removeSession} from \"../../api/auth\";\nimport {useHistory} from 'react-router-dom';\nimport {useEffect, useRef, useState} from \"react\";\nimport {useChatContext} from \"../../context\";\nimport fetchResource from \"../../api\";\nimport {useSocket} from \"../../api/socket\";\n\nconst ChatWindow = (props) => {\n\tconst user = getSessionUser();\n\tconst history = useHistory();\n\tconst {activeChat, refresh, setRefresh} = useChatContext();\n\tconst [messageBody, setMessageBody] = useState('');\n\tconst [messages, setMessages] = useState([]);\n\tconst {subscribeIncomingMessage, joinChat} = useSocket();\n\tuseEffect(() => {\n\n\t\tif(refresh) {\n\t\t\tif(activeChat){\n\t\t\t\tfetchResource(\"GET\", `message/${activeChat._id}` ).then(res => {\n\t\t\t\t\tsetMessages(res);\n\t\t\t\t\tsetRefresh(false);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t},[activeChat, refresh]);\n\n\tuseEffect(()=> {\n\t\t\tif(activeChat){\n\t\t\t\tjoinChat(activeChat._id);\n\n\t\t\t\tsubscribeIncomingMessage((newMessage) => {\n\t\t\t\t\tsetRefresh(true);\n\t\t\t\t});\n\t\t\t}\n\t}, []);\n\n\tlet userName = '';\n\tif(activeChat){\n\t\tuserName = activeChat.users.filter(u => u._id !== user.id)[0].name;\n\t}\n\n\tconst logout = () => {\n\t\tremoveSession();\n\t\thistory.push('/login');\n\t}\n\n\tconst messagesEndRef = useRef(null)\n\n\tconst scrollToBottom = () => {\n\t\tif(messagesEndRef !== null && messagesEndRef.current !== undefined){\n\t\t\tmessagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight ;\n\t\t}\n\t}\n\n\tuseEffect(scrollToBottom, [messages]);\n\n\tconst handleMessageBody = (e) => {\n\t\tsetMessageBody(e.target.value);\n\t}\n\n\tconst handleSendMessage = (evt) => {\n\t\tif (evt.keyCode === 13 && !evt.shiftKey) {\n\t\t\tevt.preventDefault();\n\t\t\tfetchResource(\"POST\",  `message/${activeChat._id}`, {body: {body: messageBody}}).then(() => {\n\t\t\t\tsetMessageBody('');\n\t\t\t\tsetRefresh(true);\n\t\t\t});\n\t\t}\n\t}\n\treturn (\n\t\t<div className={styles.root}>\n\t\t\t<div className={styles.header}>\n\t\t\t\t<div className={styles.name}><b>{userName}</b></div>\n\t\t\t\t<div className={styles.user}>\n\t\t\t\t\t<Avatar name={user.name}/>\n\t\t\t\t\t<div className={styles.logout}>\n\t\t\t\t\t\t{user.name}\n\t\t\t\t\t\t<Button size=\"sm\" variant=\"custom\" onClick={logout}>Logout</Button>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={styles.wrapper}>\n\t\t\t\t<div className={styles.messages} ref={messagesEndRef}>\n\t\t\t\t\t{messages.map(mess => (<ChatMessage message={mess}/>))}\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.footer} >\n\t\t\t\t\t{activeChat && <AutoTextArea placeholder=\"Write a message...\" value={messageBody} onChange={handleMessageBody} onKeyDown={handleSendMessage}/>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default ChatWindow;\n","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatWindow/AutoTextArea/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatWindow/AutoTextArea/autoTextArea.view.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatWindow/chatMessage/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatWindow/chatMessage/chatMessage.view.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/assets/theme/button.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatList/UsersDrawer/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/chatList/UsersDrawer/usersDrawer.view.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/context/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/api/socket/index.js",["140"],"import {io} from 'socket.io-client';\nimport {getUserToken} from \"../auth\";\nimport {createContext, useEffect, useContext} from 'react';\nimport {API_URL} from '../index';\n\nconst SocketContext = createContext(null);\n\nconst token = getUserToken();\n\tconst socket =io(API_URL, {\n\t\treconnectionDelayMax: 10000,\n\t\tauth: {\n\t\t\ttoken\n\t\t}\n\t});\nexport const SocketContextProvider = ({children}) => {\n\t\t\n\tuseEffect(() => {\n\t\tsocket.connect();\n\t\tsocket.on(\"connection\", (data) => {\n\t\t\tconsole.log(\"Connected\");\n\t\t});\n\t\treturn () => {\n\t\t\tsocket.disconnect();\n\t\t}\n\t}, [socket]);\n\tconst joinChat = (chatId) => {\n\t\tsocket.emit(\"join-chat\", chatId);\n\t\tsocket.on(\"chat-joined\", (data) => {\n\t\t\tconsole.log(`Joined chat: ${data}`);\n\t\t});\n\t};\n\t\n\tconst subscribeIncomingMessage = (callback) => {\n\t\tsocket.on(\"new-message\", callback);\n\t}\n\t\n\tconst subscribeNewChat = (callback) => {\n\t\tsocket.on(\"new-chat\", callback);\n\t}\n\t\n\tconst subscribeNewUser = (callback) => {\n\t\tsocket.on(\"new-user\", callback);\n\t}\n\t\n\tconst subscribeNewChatMessage = (callback) => {\n\t\tsocket.off(\"new-chat-message\");\n\t\tsocket.on(\"new-chat-message\", callback);\n\t}\n\n\tconst value = {\n\t\tjoinChat,\n\t\tsubscribeIncomingMessage,\n\t\tsubscribeNewChat,\n\t\tsubscribeNewUser,\n\t\tsubscribeNewChatMessage\n\t}\n\n\treturn (<SocketContext.Provider value={value} >\n\t\t{children}\n\t</SocketContext.Provider>)\n}\nexport const useSocket = () => {\n\treturn useContext(SocketContext);\n};\n\nexport const withSocket = Component => props => (<SocketContextProvider>\n\t<Component {...props}/>\n</SocketContextProvider>);\n\n\n\n\n\n\n","/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/messageToast/index.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/components/messageToast/messageToast.view.js",[],"/home/jose/Documentos/nuclio/Edicion4/hackathon3/frontend/src/views/chatter/index.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":19,"column":5,"nodeType":"147","endLine":19,"endColumn":7,"suggestions":"148"},{"ruleId":"145","severity":1,"message":"146","line":30,"column":5,"nodeType":"147","endLine":30,"endColumn":7,"suggestions":"149"},{"ruleId":"145","severity":1,"message":"150","line":28,"column":5,"nodeType":"147","endLine":28,"endColumn":24,"suggestions":"151"},{"ruleId":"145","severity":1,"message":"152","line":63,"column":4,"nodeType":"147","endLine":63,"endColumn":18,"suggestions":"153"},{"ruleId":"145","severity":1,"message":"154","line":30,"column":4,"nodeType":"147","endLine":30,"endColumn":25,"suggestions":"155"},{"ruleId":"145","severity":1,"message":"156","line":40,"column":5,"nodeType":"147","endLine":40,"endColumn":7,"suggestions":"157"},{"ruleId":"145","severity":1,"message":"158","line":25,"column":5,"nodeType":"147","endLine":25,"endColumn":13,"suggestions":"159"},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onToggle'. Either include it or remove the dependency array.","ArrayExpression",["162"],["163"],"React Hook useEffect has a missing dependency: 'subscribeNewChatMessage'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has a missing dependency: 'sessionUser.id'. Either include it or remove the dependency array.",["165"],"React Hook useEffect has a missing dependency: 'setRefresh'. Either include it or remove the dependency array.",["166"],"React Hook useEffect has missing dependencies: 'activeChat', 'joinChat', 'setRefresh', and 'subscribeIncomingMessage'. Either include them or remove the dependency array.",["167"],"React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"169","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [onToggle]",{"range":"182","text":"183"},{"range":"184","text":"183"},"Update the dependencies array to be: [activeChat, subscribeNewChatMessage, toast]",{"range":"185","text":"186"},"Update the dependencies array to be: [users, chats, sessionUser.id]",{"range":"187","text":"188"},"Update the dependencies array to be: [activeChat, refresh, setRefresh]",{"range":"189","text":"190"},"Update the dependencies array to be: [activeChat, joinChat, setRefresh, subscribeIncomingMessage]",{"range":"191","text":"192"},"Update the dependencies array to be: []",{"range":"193","text":"194"},[837,839],"[onToggle]",[815,817],[790,809],"[activeChat, subscribeNewChatMessage, toast]",[1810,1824],"[users, chats, sessionUser.id]",[974,995],"[activeChat, refresh, setRefresh]",[1154,1156],"[activeChat, joinChat, setRefresh, subscribeIncomingMessage]",[551,559],"[]"]